Aggregation is a type of association in which one class contains a reference to another class, but the contained class can exist independently of the container class.
The contained class is not owned by the container class, and it can be shared between multiple container classes.
Aggregation is represented by an empty diamond shape on the side of the container class.

class Address {
private:
    string street;
    string city;
    string state;
    string zipCode;
public:
    Address(string st, string ct, string stt, string zip) : street(st), city(ct), state(stt), zipCode(zip) {}
    void displayInfo() {
        cout << "Street: " << street << endl;
        cout << "City: " << city << endl;
        cout << "State: " << state << endl;
        cout << "Zip Code: " << zipCode << endl;
    }
};

class Person {
private:
    string name;
    int age;
    Address* address;
public:
    Person(string n, int a, Address* addr) : name(n), age(a), address(addr) {}
    void displayInfo() {
        cout << "Name: " << name << endl;
        cout << "Age: " << age << endl;
        cout << "Address: " << endl;
        address->displayInfo();
    }
};

int main() {
    Address* addr = new Address("123 Main St", "Anytown", "CA", "12345");
    Person* p1 = new Person("John Doe", 25, addr);
    Person* p2 = new Person("Jane Smith", 30, addr);

    p1->displayInfo();
    p2->displayInfo();

    return 0;
}

DIFFERENCE BETWEEN AGGREATION AND ASSOCIATION
The main difference is aggregation is stronger relationship than association as it contains reference of the other class
while in association we only add objects to the associated class.

