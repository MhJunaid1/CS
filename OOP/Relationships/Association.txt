Association is a relationship between two or more classes in which each class has its own life cycle, and there is no ownership between them.
In other words, the associated classes are independent of each other and can exist without each other.
Association is represented by a solid line between the classes.

class Student {
private:
    string name;
    int id;
public:
    Student(string n, int i) : name(n), id(i) {}
    void displayInfo() {
        cout << "Name: " << name << endl;
        cout << "ID: " << id << endl;
    }
};

class Course {
private:
    string name;
    int code;
    vector<Student*> students;
public:
    Course(string n, int c) : name(n), code(c) {}
    void addStudent(Student* s) {
        students.push_back(s);
    }
    void displayInfo() {
        cout << "Course Name: " << name << endl;
        cout << "Course Code: " << code << endl;
        cout << "Enrolled Students: " << endl;
        for (int i = 0; i < students.size(); i++) {
            students[i]->displayInfo();
        }
    }
};

int main() {
    Student* s1 = new Student("John Doe", 123);
    Student* s2 = new Student("Jane Smith", 456);
    Course* c1 = new Course("Computer Science", 101);

    c1->addStudent(s1);
    c1->addStudent(s2);

    c1->displayInfo();

    return 0;
}


